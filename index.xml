<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stan Pepels on Stan Pepels</title>
    <link>/</link>
    <description>Recent content in Stan Pepels on Stan Pepels</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Your Name</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>dear father</title>
      <link>/project/dear-father/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/dear-father/</guid>
      <description></description>
    </item>
    
    <item>
      <title>orbis</title>
      <link>/project/orbis/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/orbis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>clouded</title>
      <link>/project/clouded/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/clouded/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AGR</title>
      <link>/project/agr/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/agr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>project sulphur</title>
      <link>/project/project-sulphur/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/project-sulphur/</guid>
      <description>&lt;p&gt;Project sulphur can be subdivided into 3 catagories: engine, builder and editor. &lt;br&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;The engine:&lt;/strong&gt; is the library with all the functionality required to run the game such as rendering, physics, networking etc&amp;hellip; This is completely written in C++.
    &lt;li&gt;&lt;strong&gt;The builder:&lt;/strong&gt; is a standalone command line tool that is used to package raw assets into game ready formats used by the engine. Like the enigne this is written in C++.
    &lt;li&gt;&lt;strong&gt;The editor:&lt;/strong&gt; is the enviroment where the engines features are exposed in a user friendly interface. This is where you can create your game projects, levels etc&amp;hellip; The editor is mainly written in C#/xaml but uses some DLLs written in C++.
&lt;/ul&gt;&lt;/p&gt;

&lt;div style=&#34;position: relative;&#34;&gt;
    
    &lt;strong&gt;Engine work:&lt;/strong&gt; My main work on the engine is on the interfaces that allow the engine to communicate with the engine. The engine is connected to the editor via the network.
This means that the engine you see in the editor is its own seperate process. Another benefit of this connection is that we could in theory launch a second or even a third engine in editor mode and have all engines connect to a single editor instance.
These other versions could run on other machines such as a PS4 devkit. This in turn would then allow for simultanious testing and developing for multiple platforms without having to switch around platforms or create a build before testing.
    
&lt;/div&gt;

&lt;p&gt;&lt;div style=&#34;float: right; position: relative; width: 50%;&#34;&gt;
    &lt;div&gt;
        &lt;img src=&#34;/gifs/sulphur-builder.gif&#34; style=&#34;display: block;
  width: 100%;
             
             margin: 5% 0% 0% 0%;&#34;/&gt;
                                      
    &lt;/div&gt;
    
    &lt;div style=&#34;text-align: center; font-size: 70%;&#34;&gt;Converting multiple assets types using the sulphur builder.&lt;/div&gt;
    
&lt;/div&gt;
&lt;div style=&#34;position: relative;&#34;&gt;
    
    &lt;strong&gt;Builder work:&lt;/strong&gt; With the builder I mainly worked on the command line interfaces. These interfaces allow other programmers to easely add commands with flags and arguments to the builder. I was also responsible for doing the shader pipeline.
The shader pipeline takes in a shader written in hlsl with some custom definitions. This single file is then converted into a shader package that can be loaded by the engine and used to render with Directx12, Vulkan and GNM(PS4).
    
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;float: left; position: relative; width: 50%;&#34;&gt;
    &lt;div&gt;
        &lt;img src=&#34;/gifs/sulphur-editor.gif&#34; style=&#34;display: block;
  width: 100%;
             
             margin: 3% 0% 0% -3%;&#34;/&gt;
                                      
    &lt;/div&gt;
    
    &lt;div style=&#34;text-align: center; font-size: 70%;&#34;&gt;Assets can also be imported in the editor and instantiated in the world.&lt;/div&gt;
    
&lt;/div&gt;
&lt;div style=&#34;position: relative;&#34;&gt;
    
    &lt;p&gt;&lt;strong&gt;Editor work:&lt;/strong&gt; Most of my contribution in this project was with the editor. I wrote the interface and utility classes that allow the editor to recieve, process and send messages to connected engines.
I also wrote an interface that allows controls and systems to be developed completely seperate whilst still being able to act upon actions or event that happen in different systems. Besides this I was resonsinsible for creating the world view, asset browser, logger, and menu bar.
The editor also has a project pipeline allowing you to set up multiple game projects. Each project can be shared with other people since all paths are relative.&lt;/p&gt;

&lt;p&gt;Under the hood the editor uses a DLL version of the sulphur builder. I worked on exposing the sulphur builder(written in C++) functionality to C# so it can be used by the editor.&lt;/p&gt;

    
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AbDuckTed</title>
      <link>/project/abduckted/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/abduckted/</guid>
      <description></description>
    </item>
    
    <item>
      <title>NIMBY</title>
      <link>/project/nimby/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/nimby/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Choosing a framework for tool development</title>
      <link>/post/tools-framework/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/post/tools-framework/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Custom Physics</title>
      <link>/post/custom-physics/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/post/custom-physics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tools for fools</title>
      <link>/post/tools-for-fools/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/post/tools-for-fools/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
